@page "{id:int}"
@model MegaDeskWeb.Pages.DetailsModel

@{
    ViewData["Title"] = "Details";
}
<head>
    <link rel="stylesheet" href="" type="text/css" />
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:wght@600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Varela&display=swap" rel="stylesheet">
</head>


<h1>Details</h1>
<hr />
<div>
    <h4>DeskQuote</h4>
    <hr />
    <dl class="card-columns">
        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.customerName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.customerName)
            </dd>
        </div>
        
        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.completionDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.completionDate)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.quoteAmount)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.quoteAmount)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.RushShipping.RushName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.RushShipping.RushName)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.desk.deskDepth)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.desk.deskDepth)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.desk.deskWidth)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.desk.deskWidth)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.desk.numOfDrawers)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.desk.numOfDrawers)
            </dd>
        </div>

        <div style="break-inside: avoid; background-color: lightgray; border-radius: 15px;">
            <dt class="col-sm-10">
                @Html.DisplayNameFor(model => model.DeskQuote.desk.material.DeskMaterialName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DeskQuote.desk.material.DeskMaterialName)
            </dd>
        </div>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.DeskQuote.ID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
